<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	
		
		<context:component-scan base-package="com.kindacg"></context:component-scan>
	
	
	
	<!-- 
		数据源，配置连接池
	 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
											destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/kindacg"></property>
		<!-- 用户名 -->
		<property name="user" value="bless"></property>										
		<!-- 密码 -->
		<property name="password" value="123456"></property>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="4"></property>
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1"></property>
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1"></property>
		<!-- 最大空闲时间,1800秒内未使用则连接被丢弃。
		若为0则永不丢弃。Default: 0 用它来解决mysql 8小时自动释放连接的问题 
		-->
		<property name="maxIdleTime" value="28000"></property>
		
	</bean>
	
	<!-- 
		hibernate在spring中的配置方式
	 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
			</props>
		</property>
		<!-- 
			指定映射文件.xml
		 -->
		<property name="mappingDirectoryLocations">
			<list>
				<!-- 
					mappingDirectoryLocation可以自动扫描该包及子包下的*.hbm,xml
					与mappingResource不同的是如果映射文件在src目录下必须加上classpath
				 -->
				<value>classpath:com/kindacg/entity</value>
			</list>
		</property>
			
	</bean>
	
	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		
		<property name="sessionFactory" ref="sessionFactory"></property>
		
	</bean>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="append*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="repair" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delAndRepair" propagation="REQUIRED" rollback-for="Exception"/>
			
			<tx:method name="get*" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="select*" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="find*" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="load*" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="search*" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="datagrid*" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="count" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="login" propagation="SUPPORTS" rollback-for="Exception"/>
			<tx:method name="*" propagation="SUPPORTS" rollback-for="Exception"/>
			
			
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* services..*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>	
		
	
	
</beans>
